syntax="proto3";

package go_load;

import "api/validate.proto";

option go_package="grpc/go_load";

service GoLoadService {
  rpc CreateAccount(CreateAccountRequest) returns(CreateAccountResponse) {}
  rpc CreateSession(CreateSessionRequest) returns(CreateSessionResponse) {}
  rpc CreateDownloadTask(CreateDownloadTaskRequest) returns(CreateDownloadTaskResponse) {}
  rpc GetDownloadTaskList(GetDownloadTaskListRequest) returns(GetDownloadTaskListResponse) {}
  rpc GetDownloadTaskFile(GetDownloadTaskFileRequest) returns (stream GetDownloadTaskFileResponse) {}
}

message Account {
  uint64 id = 1;
  string account_name = 2; 
}

message CreateAccountRequest {
  string account_name = 1 [(validate.rules).string = {
    pattern:   "^[a-zA-Z0-9]{6,32}$",
  }];
  string password = 2 [(validate.rules).string = {
    pattern:   "^[a-zA-Z0-9]{6,32}$",
  }];
}

message CreateAccountResponse {
  uint64 account_id = 1;
}

message CreateSessionRequest {
  string account_name = 1 [(validate.rules).string = {
    pattern:   "^[a-zA-Z0-9]{6,32}$",
  }];
  string password = 2 [(validate.rules).string = {
    pattern:   "^[a-zA-Z0-9]{6,32}$",
  }];
}

message CreateSessionResponse {
  Account account = 1;
}

enum DownloadType {
  DOWNLOAD_TYPE_UNSPECIFIED = 0;
  DOWNLOAD_TYPE_HTTP = 1;
}

enum DownloadStatus {
  DOWNLOAD_STATUS_UNSPECIFIED = 0;
  DOWNLOAD_STATUS_PENDING = 1;
  DOWNLOAD_STATUS_DOWNLOADING = 2;
  DOWNLOAD_STATUS_FAILED = 3;
  DOWNLOAD_STATUS_SUCCESS = 4;
}

message DownloadTask {
  uint64 id = 1;
  Account of_account = 2;
  DownloadType download_type = 3 [(validate.rules).enum.defined_only = true];
  string url = 4;
  DownloadStatus download_status = 5;
}

message CreateDownloadTaskRequest {
  DownloadType download_type = 1;
  string url = 2 [(validate.rules).string = {min_len: 10, max_len: 200}];
}

message CreateDownloadTaskResponse {
  DownloadTask download_task = 1;
}

message GetDownloadTaskListRequest {
  uint64 limit = 1;
  uint64 offset = 2 [(validate.rules).uint64 = {lte: 100}];
}

message GetDownloadTaskListResponse {
  repeated DownloadTask download_task_list = 1;
  uint64 total_count = 2;
}

message GetDownloadTaskFileRequest {
  uint64 download_task_id = 1;
}

message GetDownloadTaskFileResponse {
  bytes data = 1;
}
